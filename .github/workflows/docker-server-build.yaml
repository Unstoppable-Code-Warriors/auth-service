name: Docker Server Build and Push

on:
  push:
    branches:
      - main
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/dev' }}

jobs:
  build-server:
    name: Docker Build and Push Server
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_REPO }}/server
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=branch,enable=${{ github.ref != 'refs/heads/main' }}
            type=sha,prefix=
            type=match,pattern=\d.\d.\d

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set push condition
        id: push-condition
        run: |
          if [[ ${{ github.event_name == 'push' }} == 'true' ]]; then
            echo "should_push=true" >> $GITHUB_OUTPUT
          else
            echo "should_push=false" >> $GITHUB_OUTPUT
          fi

      - name: Login to DockerHub
        if: steps.push-condition.outputs.should_push == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/server/Dockerfile
          push: ${{ steps.push-condition.outputs.should_push }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build-server
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            # Stop and remove existing container if it exists
            docker stop stackauth-server || true
            docker rm stackauth-server || true
            
            # Pull the latest image
            docker pull ${{ secrets.DOCKER_REPO }}/server:latest
            
            # Run the new container
            docker run -d \
              --name stackauth-server \
              --env-file ${{ secrets.SERVER_ENV_FILE_PATH }} \
              -p 8101:8101 \
              -p 8102:8102 \
              --restart unless-stopped \
              ${{ secrets.DOCKER_REPO }}/server:latest
            
            # Clean up old images
            docker image prune -f
            
            # Wait for container to start
            sleep 15
            
            # Health check
            echo "Performing health check..."
            if curl -f http://localhost:8101/health || curl -f http://localhost:8101; then
              echo "✅ Deployment successful - Server is responding"
            else
              echo "❌ Health check failed - Server may not be running correctly"
              docker logs stackauth-server --tail 50
              exit 1
            fi
